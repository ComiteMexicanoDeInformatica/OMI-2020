class program {
  define encuentraMenor(n) {
    if (nextToABeeper) {
      pickbeeper();
      encuentraMenor(succ(n));
    } else {
      move();
      iterate (n) {
        if (nextToABeeper)
          pickbeeper();
        else {
          turn(1);
          iterate (pred(n)) putbeeper();
        }
      }
      if (facingWest) {
        while (nextToABeeper) pickbeeper();
        iterate (n) putbeeper();
      } else
        turn(3);
    }
  }

  define agrupaZumbadores(n) {
    if (nextToABeeper) {
      pickbeeper();
      agrupaZumbadores(succ(n));
    } else {
      if (frontIsClear) {
        move();
        agrupaZumbadores(n);
        pickbeeper();
      } else {
        iterate (n) putbeeper();
      }
    }
  }

  define turn(n) {
    iterate (n) turnleft();
  }

  define cuenta(n) {
    if (notNextToABeeper) {
      iterate (succ(n)) putbeeper();
      if (frontIsClear) {
        move();
        cuenta(succ(n));
      } else
        turn(2);
    } else {
      if (frontIsClear) {
        move();
        cuenta(n);
      } else
        turn(2);
    }
  }

  define cuenta_plataforma() {
    while (notNextToABeeper) move();
    cuenta(1);
    cuenta(1);
  }

  program() {
    while (notFacingEast) turnleft();
    while (leftIsClear) {
      cuenta_plataforma();
      turn(1);
      move();
      turn(3);
    }
    cuenta_plataforma();
    turn(3);
    while (leftIsClear) {
      agrupaZumbadores(0);
      pickbeeper();
      turn(1);
      move();
      turn(1);
      while (frontIsClear) move();
      turn(2);
    }
    agrupaZumbadores(0);
    pickbeeper();
    turn(3);
    while (frontIsClear) encuentraMenor(0);
    turnoff();
  }
}
