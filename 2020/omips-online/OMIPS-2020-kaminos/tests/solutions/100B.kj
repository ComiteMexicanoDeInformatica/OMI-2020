class program {
  void turnright() {
    turnleft();
    turnleft();
    turnleft();
  }

  void bump() {
    while (frontIsClear) move();
  }

  void turn() {
    turnleft();
    turnleft();
  }

  void north() {
    while (notFacingNorth) turnleft();
  }

  void south() {
    while (notFacingSouth) turnleft();
  }

  void east() {
    while (notFacingEast) turnleft();
  }

  void west() {
    while (notFacingWest) turnleft();
  }

  void countAndStep(n) {
    if (nextToABeeper) {
      pickbeeper();

      countAndStep(succ(n));

      if (facingSouth) putbeeper();
    } else {
      north();
      iterate (pred(n)) turnleft();

      if (frontIsBlocked) {
        south();
        return();
      }

      move();
      go();

      if (facingSouth) {
        iterate (pred(n)) turnleft();
        move();

        south();
      } else {
        south();

        iterate (pred(n)) turnleft();
        move();

        north();
      }
    }
  }

  void go() {
    if (notNextToABeeper) {
      north();
      return();
    }

    countAndStep(0);
  }

  program() {
    while (iszero(0)) {
      go();
      north();

      if (frontIsClear) {
        move();
      } else if (rightIsClear) {
        turnright();
        move();
        turnright();
        bump();
        turn();
      } else
        turnoff();
    }
  }
}
