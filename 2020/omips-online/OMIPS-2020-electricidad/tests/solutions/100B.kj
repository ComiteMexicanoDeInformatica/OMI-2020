class program {
  void turnright() {
    turnleft();
    turnleft();
    turnleft();
  }

  void west() {
    while (notFacingWest) turnleft();
  }

  void north() {
    while (notFacingNorth) turnleft();
  }

  void east() {
    while (notFacingEast) turnleft();
  }

  void south() {
    while (notFacingSouth) turnleft();
  }

  void bump() {
    while (frontIsClear) move();
  }

  void back() {
    turnleft();
    turnleft();
    move();
    turnleft();
    turnleft();
  }

  void updateMax(n) {
    if (iszero(n)) return();

    if (nextToABeeper) {
      pickbeeper();
      updateMax(pred(n));
      putbeeper();
    } else {
      iterate (n) putbeeper();
    }
  }

  void bumpSouthToUpdate(n) {
    if (!facingSouth) {
      turnleft();
      bumpSouthToUpdate(n);
      turnright();
    } else if (!frontIsBlocked) {
      move();
      bumpSouthToUpdate(n);
      back();
    } else {
      updateMax(n);
    }
  }

  void bumpWestToUpdate(n) {
    if (!facingWest) {
      turnleft();
      bumpWestToUpdate(n);
      turnright();
    } else if (!frontIsBlocked) {
      move();
      bumpWestToUpdate(n);
      back();
    } else {
      bumpSouthToUpdate(n);
    }
  }

  void go(n) {
    if (nextToABeeper) {
      pickbeeper();
      go(succ(n));
      putbeeper();
    } else {
      if (frontIsClear) {
        move();
        go(n);
        back();
      } else {
        bumpWestToUpdate(n);
      }
    }
  }

  void checkRows() {
    while (iszero(0)) {
      go(0);
      if (leftIsBlocked) {
        return();
      } else {
        north();
        move();
        west();
        bump();
        east();
      }
    }
  }

  void checkColumns() {
    while (iszero(0)) {
      go(0);
      if (rightIsBlocked) {
        return();
      } else {
        east();
        move();
        south();
        bump();
        north();
      }
    }
  }

  program() {
    turnright();

    if (frontIsClear) {
      move();
      checkRows();
    }

    south();
    bump();
    west();
    bump();

    north();

    if (frontIsClear) {
      move();
      checkColumns();
    }
  }
}
